# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go2

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.23' ]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version

      - name: Test
        run: go test -v github.com/zukrin/versifyr/cmd/versifyr

      - name: Build-linux-amd64
        run: go build -v -o dist/linux-amd64/versifyr github.com/zukrin/versifyr/cmd/versifyr

      - name: Build-darwin-amd64
        run: GOOS=darwin GOARCH=arm64 go build -v -o dist/darwin-arm64/versifyr github.com/zukrin/versifyr/cmd/versifyr

      - name: Build-darwin-arm64
        run: GOOS=darwin GOARCH=amd64 go build -v -o dist/darwin-amd64/versifyr github.com/zukrin/versifyr/cmd/versifyr

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       Changes in this Release
      #       - First Change
      #       - Second Change
      #     draft: false
      #     prerelease: false
